name: 🚀 Publish Trigger.dev Docker

on:
  push:
    branches:
      - main
    tags:
      - "v*"
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  packages: write
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

jobs:
  typecheck:
    name: ʦ TypeScript
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: ⎔ Setup pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7.18

      - name: ⎔ Setup node
        uses: buildjet/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm"

      - name: 📥 Download deps
        run: pnpm install --frozen-lockfile

      - name: 📀 Generate Prisma Client
        run: pnpm run generate

      - name: 🔎 Type check
        run: pnpm run typecheck --filter webapp

  publish:
    needs: [typecheck]
    runs-on: buildjet-4vcpu-ubuntu-2204
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐳 Generate Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🐳 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐙 Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ github.repository }}:main
          cache-to: type=registry,ref=${{ github.repository }}:main,mode=max
